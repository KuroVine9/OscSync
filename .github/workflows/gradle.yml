# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: build app-discord-bot

on:
  workflow_dispatch:
    inputs:
      deploy_when_build_success:
        description: deploy app when build ended up successfully.
        type: boolean
        required: true
        default: true

jobs:
  build:
    environment: APP_DISCORD_BOT
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build with Gradle Wrapper
        run: ./gradlew module:application:app-discord-bot:build

      - name: Docker Image Build
        run: docker build -f ./script/backend/app-discord-bot/Dockerfile -t app-discord-bot .

      - name: Docker Image Tag
        run: docker image tag app-discord-bot ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPO_NAME }}

      - name: Docker Image Push
        run: docker push ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPO_NAME }}

  deploy:
    if: ${{ inputs.deploy_when_build_success }}
    needs: 
      - build
    environment: APP_DISCORD_BOT
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Deploy Remote Server
        uses: appleboy/ssh-action@v1
        env:
          COMPOSE_FILE_LOC: "/var/services/homes/github-cd/app-discord-bot/docker-compose-deploy.yml"
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker compose -f $COMPOSE_FILE_LOC down
            docker compose pull ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPO_NAME }}
            docker compose -f $COMPOSE_FILE_LOC up -d
  
  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
